package com.bachue.snr.prosnr01.dao.util;


/**
 * Clase que contiene todos las las consultas que son relacionadas como utilidades y recurrentes en todo el sistema
 *
 * @author Julian Vaca
 */
public class ConsultasUtilidades
{
	/** Constante CS_INTERVINIENTE_ACTO  */
	public static final String CS_INTERVINIENTE_ACTO = "SELECT NVL(LTRIM(RTRIM((PRIMER_NOMBRE || ' ' || SEGUNDO_NOMBRE || ' ' || PRIMER_APELLIDO || ' ' || SEGUNDO_APELLIDO))),RAZON_SOCIAL) NOMBRE, NUMERO_DOCUMENTO FROM SDB_ACC_PERSONA WHERE ID_PERSONA IN (	SELECT ID_PERSONA FROM SDB_ACC_SOLICITUD_INTERVINIENTE WHERE ID_SOLICITUD = ?) ORDER BY NOMBRE ASC";

	/** Constante CS_NATURALEZA_ACTO. */
	public static final String CS_NATURALEZA_ACTO = "SELECT TPA.ID_TIPO_ACTO,TPA.NOMBRE,A.IND_MAYOR_VALOR, NVL(A.CUANTIA,0) CUANTIA,A.ID_ACTO,TPA.CERTIFICADO_OBLIGATORIO,NVL(TPA.VALIDAR_AREA,'N')VALIDAR_AREA, NVL(TPA.APERTURA_MATRICULA,'N')APERTURA_MATRICULA,NVL(TPA.INSCRIPCION_ADICIONAL,'N')INSCRIPCION_ADICIONAL,NVL(TPA.GENERA_SEGREGACION,'N')GENERA_SEGREGACION, A.ID_CIRCULO FROM SDB_ACC_ACTO A INNER JOIN SDB_PGN_TIPO_ACTO TPA ON A.ID_TIPO_ACTO = TPA.ID_TIPO_ACTO WHERE A.ID_SOLICITUD = ? AND NVL (A.ACTIVO_PRECALIFICACION , 'S') <> 'N' ";

	/** Constante CS_BGN_DOCUMENTO_SEC. */
	public static final String CS_BGN_DOCUMENTO_SEC = "SELECT SEC_BGN_DOCUMENTO_ID_DOCUMENTO.NEXTVAL FROM DUAL";

	/** Constante CS_ACC_DATOS_ANT_SISTEMA_SEC. */
	public static final String CS_ACC_DATOS_ANT_SISTEMA_SEC = "SELECT SEC_ACC_DATOS_ANT_SISTEMA_ID_DATOS_ANT_SISTEMA.NEXTVAL FROM DUAL";

	/** Constante CS_DATOS_DOCUMENTO. */
	public static final String CS_DATOS_DOCUMENTO = "SELECT TDP.NOMBRE CLASE, D.NUMERO, TO_CHAR(D.FECHA_DOCUMENTO,'YYYY-MM-DD') FECHA, OO.NOMBRE OFICINA_ORIGEN, VER.NOMBRE CIUDAD FROM SDB_BGN_DOCUMENTO D INNER JOIN SDB_PGN_OFICINA_ORIGEN OO ON D.ID_OFICINA_ORIGEN = OO.ID_OFICINA_ORIGEN INNER JOIN SDB_PGN_VEREDA VER ON OO.ID_PAIS = VER.ID_PAIS AND OO.ID_DEPARTAMENTO = VER.ID_DEPARTAMENTO AND OO.ID_MUNICIPIO = VER.ID_MUNICIPIO AND OO.ID_VEREDA = VER.ID_VEREDA INNER JOIN SDB_PGN_TIPO_DOCUMENTO_PUBLICO TDP ON TDP.ID_TIPO_DOCUMENTO = D.ID_TIPO_DOCUMENTO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_DOCUMENTO = D.ID_DOCUMENTO WHERE S.ID_SOLICITUD = ?";

	/** Constante CS_MATRICULAS_APERTURA. */
	public static final String CS_MATRICULAS_APERTURA = "SELECT  NVL(COMPLEMENTO_DIRECCION, ' ') DIRECCION ,NVL(NOMBRE_PREDIO, ' ') NOMBRE_PREDIO,AREA_TERRENO,AREA_PRIVADA,AREA_CONSTRUIDA,COEFICIENTE  FROM SDB_ACC_MATRICULA_SEGREGACION WHERE ID_SOLICITUD = ?";

	/** Constante CS_MATRICULA_PREDIO. */
	public static final String CS_MATRICULA_PREDIO = "SELECT BPR.ID_CIRCULO || '-' || BPR.ID_MATRICULA MATRICULA_INMOBILIARIA, BGNDP.DIRECCION_COMPLETA DIRECCION, PT.DESCRIPCION TIPO_PREDIO "
		+ " FROM SDB_ACC_SOLICITUD ACCS  "
		+ " LEFT JOIN SDB_ACC_SOLICITUD_MATRICULA ACCSM ON ACCS.ID_SOLICITUD = ACCSM.ID_SOLICITUD "
		+ " LEFT JOIN SDB_BNG_PREDIO_REGISTRO BPR ON ACCSM.ID_CIRCULO = BPR.ID_CIRCULO  AND ACCSM.ID_MATRICULA = BPR.ID_MATRICULA "
		+ " LEFT JOIN SDB_COL_PREDIO_TIPO PT ON BPR.ID_TIPO_PREDIO = PT.ID_TIPO_PREDIO "
		+ " LEFT JOIN SDB_PGN_ZONA_REGISTRAL ZR ON BPR.ID_ZONA_REGISTRAL = ZR.ID_ZONA_REGISTRAL "
		+ " LEFT JOIN SDB_PGN_DEPARTAMENTO PGND ON ZR.ID_PAIS = PGND.ID_PAIS  AND ZR.ID_DEPARTAMENTO =PGND.ID_DEPARTAMENTO  "
		+ " LEFT JOIN SDB_PGN_MUNICIPIO PGNM ON ZR.ID_PAIS = PGNM.ID_PAIS  AND ZR.ID_DEPARTAMENTO =PGNM.ID_DEPARTAMENTO  AND ZR.ID_MUNICIPIO = PGNM.ID_MUNICIPIO  "
		+ " LEFT JOIN SDB_PGN_VEREDA PGNV ON ZR.ID_PAIS = PGNV.ID_PAIS AND ZR.ID_DEPARTAMENTO = PGNV.ID_DEPARTAMENTO  AND ZR.ID_MUNICIPIO = PGNV.ID_MUNICIPIO AND ZR.ID_VEREDA = PGNV.ID_VEREDA "
		+ " LEFT JOIN SDB_BNG_DIRECCION_PREDIO BGNDP ON BPR.ID_CIRCULO = BGNDP.ID_CIRCULO  AND BPR.ID_MATRICULA = BGNDP.ID_MATRICULA "
		+ " AND BGNDP.ID_DIRECCION = (SELECT MAX(ID_DIRECCION) FROM SDB_BNG_DIRECCION_PREDIO WHERE ID_CIRCULO = BGNDP.ID_CIRCULO  AND ID_MATRICULA = BGNDP.ID_MATRICULA ) "
		+ " LEFT JOIN SDB_PNG_TIPO_EJE PNGTE ON BGNDP.ID_TIPO_EJE_PRINCIPAL = PNGTE.ID_TIPO_EJE "
		+ " LEFT JOIN SDB_PNG_TIPO_EJE PNGTE1 ON BGNDP.ID_TIPO_EJE_SECUNDARIO = PNGTE1.ID_TIPO_EJE "
		+ " LEFT JOIN SDB_PGN_VEREDA PGNV ON ZR.ID_PAIS = PGNV.ID_PAIS AND ZR.ID_DEPARTAMENTO = PGNV.ID_DEPARTAMENTO  AND ZR.ID_MUNICIPIO = PGNV.ID_MUNICIPIO AND ZR.ID_VEREDA = PGNV.ID_VEREDA "
		+ " LEFT JOIN SDB_BNG_DIRECCION_PREDIO BGNDP ON BPR.ID_CIRCULO = BGNDP.ID_CIRCULO  AND BPR.ID_MATRICULA = BGNDP.ID_MATRICULA "
		+ " AND BGNDP.ID_DIRECCION = (SELECT MAX(ID_DIRECCION) FROM SDB_BNG_DIRECCION_PREDIO WHERE ID_CIRCULO = BGNDP.ID_CIRCULO  AND ID_MATRICULA = BGNDP.ID_MATRICULA )  "
		+ " LEFT JOIN SDB_PNG_TIPO_EJE PNGTE ON BGNDP.ID_TIPO_EJE_PRINCIPAL = PNGTE.ID_TIPO_EJE "
		+ " LEFT JOIN SDB_PNG_TIPO_EJE PNGTE1 ON BGNDP.ID_TIPO_EJE_SECUNDARIO = PNGTE1.ID_TIPO_EJE "
		+ " WHERE ACCS.ID_SOLICITUD = ?";

	/** Constante CS_CANTIDAD_POR_ENTREGA. */
	public static final String CS_CANTIDAD_POR_ENTREGA = "SELECT TH.ID_ETAPA, COUNT(TH.ID_ETAPA) CANTIDAD FROM SDB_ACC_TURNO_HISTORIA TH WHERE TH.ESTADO_ACTIVIDAD IN ('ASG') AND TH.ID_ETAPA = ? ";

	/** Constante CS_CONSULTA_BANDEJA_TURNOS. */
	public static final String CS_CONSULTA_BANDEJA_TURNOS = "SELECT P.NOMBRE PROCESO, TH.ID_TURNO, TH.FECHA_REPARTO FECHA_ASIGNACION, S.NIR, TH.MOTIVO_NO_TRAMITE, THANT.OBSERVACIONES OBSERVACIONES, TH.ID_TURNO_HISTORIA, TH.ESTADO_ACTIVIDAD FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON TH.ID_TURNO = T.ID_TURNO INNER JOIN SDB_ACC_PROCESO P ON TH.ID_PROCESO = P.ID_PROCESO RIGHT JOIN SDB_ACC_SOLICITUD S ON TH.ID_PROCESO = S.ID_PROCESO AND TH.ID_SOLICITUD = S.ID_SOLICITUD LEFT JOIN SDB_ACC_TURNO_HISTORIA THANT ON TH.ID_ANTERIOR = THANT.ID_TURNO_HISTORIA WHERE TH.ID_ETAPA = ? AND TH.ID_USUARIO = ?   ";

	/** Constante CS_CONSULTA_PREDIO_DOCUMENTO. */
	public static final String CS_CONSULTA_PREDIO_DOCUMENTO = "SELECT S.NIR, T.ID_TURNO, TD.ID_TURNO_HIJO TURNO_DERIVADO, TO_CHAR(T.FECHA_CREACION,'DD/MM/YYYY') FECHA, NVL( S1.NIR,' ')NIR_ASOCIADO, CASE WHEN ASA.INDICADOR_VINCULADO = 'S' THEN (SELECT PKG_REGISTRO.FUNC_DESCRIPCION_VINCULADO(ID_TURNO_PADRE) FROM SDB_ACC_TURNO_DERIVADO WHERE INDICADOR_VINCULADO = 'S' AND SDB_ACC_TURNO_DERIVADO.ID_TURNO_PADRE = T.ID_TURNO) ELSE NVL(sap.NOMBRE,' ')   END TRAMITE_ASOCIADO FROM SDB_ACC_SOLICITUD S RIGHT JOIN SDB_ACC_TURNO T ON S.ID_SOLICITUD = T.ID_SOLICITUD LEFT JOIN SDB_ACC_SOLICITUD_ASOCIADA ASA ON ASA.ID_SOLICITUD = S.ID_SOLICITUD LEFT JOIN SDB_ACC_SOLICITUD S1 ON S1.ID_SOLICITUD = ASA.ID_SOLICITUD1 LEFT JOIN SDB_ACC_PROCESO sap ON( sap.ID_PROCESO = S1.ID_PROCESO) LEFT JOIN SDB_ACC_TURNO_DERIVADO TD ON TD.ID_TURNO_PADRE = T.ID_TURNO AND TD.INDICADOR_VINCULADO = 'S' WHERE T.ID_TURNO = (SELECT ID_TURNO FROM SDB_ACC_TURNO_HISTORIA TH WHERE TH.ID_TURNO_HISTORIA = ?) ORDER BY ASA.FECHA_CREACION DESC";

	/** Constante CS_DATOS_ANT_SISTEMA. */
	public static final String CS_DATOS_ANT_SISTEMA = "SELECT DAS.ADQUISICION_PREDIO, CR.NOMBRE CIRCULO, PT.ILICODE, DAS.NOMBRE_PREDIO, DAS.ID_LIBRO_ANT_SISTEMA, DAS.TOMO,  DAS.FOLIO, DAS.PARTIDA, DAS.ANIO, P.NOMBRE PAIS, D.NOMBRE DEPARTAMENTO, M.NOMBRE MUNICIPIO FROM SDB_ACC_DATOS_ANT_SISTEMA DAS INNER JOIN SDB_ACC_SOLICITUD S ON (DAS.ID_DATOS_ANT_SISTEMA = S.ID_DATOS_ANT_SISTEMA) INNER JOIN SDB_ACC_TURNO T ON (S.ID_SOLICITUD = T.ID_SOLICITUD) INNER JOIN SDB_ACC_TURNO_HISTORIA TH ON (T.ID_TURNO = TH.ID_TURNO) INNER JOIN SDB_PGN_CIRCULO_REGISTRAL CR ON (CR.ID_CIRCULO = DAS.ID_CIRCULO) INNER JOIN SDB_COL_PREDIO_TIPO PT ON (PT.ID_TIPO_PREDIO = DAS.ID_TIPO_PREDIO) INNER JOIN SDB_PGN_PAIS P ON (P.ID_PAIS = DAS.ID_PAIS) INNER JOIN SDB_PGN_DEPARTAMENTO D ON (D.ID_DEPARTAMENTO = DAS.ID_DEPARTAMENTO) INNER JOIN SDB_PGN_MUNICIPIO M ON (M.ID_MUNICIPIO = DAS.ID_MUNICIPIO AND M.ID_DEPARTAMENTO = DAS.ID_DEPARTAMENTO) WHERE TH.ID_TURNO_HISTORIA = ? ";

	/** Constante CS_DATOS_DOCUMENTO_PREDIO. */
	public static final String CS_DATOS_DOCUMENTO_PREDIO = "SELECT TD.ID_TIPO_DOCUMENTO, TD.NOMBRE TIPO_DOCUMENTO, SM.NUMERO, SM.FECHA_DOCUMENTO, SM.FECHA_EJECUTORIA, OO.NOMBRE NOMBRE_OFICINA, TOF.NOMBRE TIPO_OFICINA, PA.NOMBRE PAIS, DTO.NOMBRE DEPARTAMENTO, MUN.NOMBRE MUNICIPIO, S.ENTIDAD_EXENTA  FROM SDB_BGN_DOCUMENTO SM INNER JOIN SDB_ACC_SOLICITUD S ON SM.ID_DOCUMENTO = S.ID_DOCUMENTO AND SM.VERSION_DOCUMENTO = S.VERSION_DOCUMENTO  RIGHT JOIN SDB_PGN_OFICINA_ORIGEN OO ON SM.ID_OFICINA_ORIGEN = OO.ID_OFICINA_ORIGEN RIGHT JOIN SDB_PGN_TIPO_OFICINA TOF ON OO.ID_TIPO_OFICINA = TOF.ID_TIPO_OFICINA INNER JOIN SDB_PGN_TIPO_DOCUMENTO_PUBLICO TD ON SM.ID_TIPO_DOCUMENTO = TD.ID_TIPO_DOCUMENTO INNER JOIN SDB_PGN_DEPARTAMENTO DTO ON OO.ID_DEPARTAMENTO = DTO.ID_DEPARTAMENTO INNER JOIN SDB_PGN_PAIS PA ON OO.ID_PAIS = PA.ID_PAIS INNER JOIN SDB_PGN_MUNICIPIO MUN ON OO.ID_MUNICIPIO = MUN.ID_MUNICIPIO AND OO.ID_PAIS = MUN.ID_PAIS AND OO.ID_DEPARTAMENTO = MUN.ID_DEPARTAMENTO   WHERE S.ID_SOLICITUD = ( SELECT ID_SOLICITUD FROM SDB_ACC_TURNO T WHERE T.ID_TURNO = (SELECT ID_TURNO	FROM SDB_ACC_TURNO_HISTORIA TH WHERE TH.ID_TURNO_HISTORIA = ?))";

	/** Constante CS_ACTOS_PREDIO. */
	public static final String CS_ACTOS_PREDIO = "SELECT PNJ.HABILITA_SECUENCIA, AA.ID_ACTO ID_ACTO_BD, AA.ID_TIPO_ACTO, AA.ID_TIPO_TARIFA_REGISTRAL TIPO_TARIFA, UPPER(PTA.NOMBRE) ESPECIFICACION, TO_DATE(TO_CHAR(AT.FECHA_CREACION, 'YYYY/MM/DD HH:MI:SS'), 'YYYY/MM/DD HH:MI:SS') AS FECHA_CREACION_TURNO, PTA.ACTO_SIN_CUANTIA, AA.CUANTIA, AA.VALOR_AVALUO, AA.CANTIDAD_ACTOS, AA.FECHA_VENCIMIENTO, BD.FECHA_EJECUTORIA, NVL(ATA.NOMBRE,' ') TIPO_ADQUISICION, NVL(AA.IND_MAYOR_VALOR,'') IND_MAYOR_VALOR FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO AT ON AT.ID_TURNO = TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD = AT.ID_SOLICITUD INNER JOIN SDB_ACC_ACTO AA  ON AA.ID_SOLICITUD = S.ID_SOLICITUD AND AA.ID_CIRCULO = AT.ID_CIRCULO INNER JOIN SDB_PGN_TIPO_ACTO PTA ON PTA.ID_TIPO_ACTO  = AA.ID_TIPO_ACTO  AND PTA.VERSION = AA.VERSION INNER JOIN SDB_BGN_DOCUMENTO BD ON BD.ID_DOCUMENTO = S.ID_DOCUMENTO AND BD.VERSION_DOCUMENTO = S.VERSION_DOCUMENTO LEFT JOIN SDB_ACC_TIPO_ADQUISICION ATA ON ATA.ID_TIPO_ADQUISICION  = AA.ID_TIPO_ADQUISICION LEFT JOIN SDB_PNG_NATURALEZA_JURIDICA PNJ ON PNJ.ID_NATURALEZA_JURIDICA = AA.ID_TIPO_ACTO AND PNJ.VERSION = AA.VERSION WHERE  TH.ID_TURNO_HISTORIA = ? AND AA.IND_MAYOR_VALOR IS";

	/** Constante CS_ACTOS_PREDIO_VINCULADOS. */
	public static final String CS_ACTOS_PREDIO_VINCULADOS = " SELECT PNJ.HABILITA_SECUENCIA,  AA.ID_TIPO_ACTO,  UPPER(PTA.NOMBRE) ESPECIFICACION,"
		+ " TO_DATE(TO_CHAR(AT.FECHA_CREACION, 'YYYY/MM/DD HH:MI:SS'), 'YYYY/MM/DD HH:MI:SS') AS FECHA_CREACION_TURNO,PTA.ACTO_SIN_CUANTIA,"
		+ " AA.CUANTIA,  AA.VALOR_AVALUO,  AA.CANTIDAD_ACTOS,  AA.FECHA_VENCIMIENTO,  BD.FECHA_EJECUTORIA,  NVL(ATA.NOMBRE,' ') TIPO_ADQUISICION,  AT.ID_TURNO  "
		+ " FROM SDB_ACC_SOLICITUD S INNER JOIN SDB_ACC_TURNO AT ON AT.ID_SOLICITUD = S.ID_SOLICITUD "
		+ " INNER JOIN SDB_ACC_ACTO AA ON AA.ID_SOLICITUD = S.ID_SOLICITUD AND AA.ID_CIRCULO  = AT.ID_CIRCULO "
		+ " INNER JOIN SDB_PGN_TIPO_ACTO PTA ON PTA.ID_TIPO_ACTO = AA.ID_TIPO_ACTO AND PTA.VERSION     = AA.VERSION "
		+ " INNER JOIN SDB_BGN_DOCUMENTO BD ON BD.ID_DOCUMENTO       = S.ID_DOCUMENTO AND BD.VERSION_DOCUMENTO = S.VERSION_DOCUMENTO "
		+ " LEFT JOIN SDB_ACC_TIPO_ADQUISICION ATA ON ATA.ID_TIPO_ADQUISICION = AA.ID_TIPO_ADQUISICION "
		+ " LEFT JOIN SDB_PNG_NATURALEZA_JURIDICA PNJ  ON PNJ.ID_NATURALEZA_JURIDICA = AA.ID_TIPO_ACTO AND PNJ.VERSION  = AA.VERSION WHERE AT.ID_TURNO = ?";

	/** Constante CS_MATRICULAS_PREDIO. */
	public static final String CS_MATRICULAS_PREDIO = " SELECT SM.ID_CIRCULO || '-' || SM.ID_MATRICULA MATRICULA  , UPPER (NVL(EP.NOMBRE,'ACTIVO')) ESTADO_PREDIO,SM.MATRICULAS_APERTURAR  "
		+ " FROM SDB_ACC_SOLICITUD_MATRICULA SM "
		+ " INNER JOIN SDB_ACC_TURNO_HISTORIA TH ON SM.ID_SOLICITUD = TH.ID_SOLICITUD "
		+ " INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO = TH.ID_TURNO "
		+ " INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON PR.ID_CIRCULO = SM.ID_CIRCULO AND PR.ID_MATRICULA = SM.ID_MATRICULA "
		+ " LEFT JOIN SDB_PNG_ESTADO_PREDIO EP ON EP.ID_ESTADO_PREDIO = PR.ID_ESTADO_PREDIO "
		+ " WHERE TH.ID_TURNO_HISTORIA = ? AND NVL(SM.ESTADO,'A') != 'I' AND T.ID_CIRCULO = SM.ID_CIRCULO ";

	/** Constante CS_MATRICULAS_PREDIO_BY_MATRICULA. */
	public static final String CS_MATRICULAS_PREDIO_BY_MATRICULA = " SELECT SM.ID_CIRCULO || '-' || SM.ID_MATRICULA MATRICULA  , UPPER (NVL(EP.NOMBRE,'ACTIVO')) ESTADO_PREDIO,SM.MATRICULAS_APERTURAR  FROM SDB_ACC_SOLICITUD_MATRICULA SM  INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON PR.ID_CIRCULO = SM.ID_CIRCULO AND PR.ID_MATRICULA = SM.ID_MATRICULA"
		+ " LEFT JOIN SDB_PNG_ESTADO_PREDIO EP ON EP.ID_ESTADO_PREDIO = PR.ID_ESTADO_PREDIO INNER JOIN SDB_ACC_SOLICITUD S ON SM.ID_SOLICITUD = S.ID_SOLICITUD WHERE NVL(SM.ESTADO,'A') != 'I' AND SM.ID_SOLICITUD = (SELECT ID_SOLICITUD FROM SDB_ACC_TURNO T "
		+ " WHERE T.ID_TURNO =  ? ) AND SM.ID_CIRCULO = ? AND SM.ID_MATRICULA = ?  ";

	/** Constante CS_CONSULTA_NIR_SOLICITUD. */
	public static final String CS_CONSULTA_NIR_SOLICITUD = "SELECT NVL(S.NIR,' ') NIR, TO_DATE(TO_CHAR(S.FECHA_CREACION, 'YYYY/MM/DD HH:MI:SS'), 'YYYY/MM/DD HH:MI:SS') FECHA_CREACION FROM SDB_ACC_SOLICITUD S WHERE S.ID_SOLICITUD = ?";

	/** Constante CS_UPDATE_OBSERVACIONES_FOLIO. */
	public static final String CS_UPDATE_OBSERVACIONES_FOLIO = "UPDATE SDB_ACC_TURNO_HISTORIA SET OBSERVACIONES_NO_TRAMITE = ?, ID_USUARIO_MODIFICACION = ?, FECHA_MODIFICACION = SYSTIMESTAMP WHERE ID_TURNO_HISTORIA = ?";

	/** Constante CS_CIRCULO_BY_ID_TURNO. */
	public static final String CS_CIRCULO_BY_ID_TURNO = "SELECT ID_CIRCULO FROM SDB_ACC_TURNO WHERE ID_TURNO= ( SELECT ID_TURNO FROM SDB_ACC_TURNO_HISTORIA TH WHERE TH.ID_TURNO_HISTORIA = ?)";

	/** Constante CS_SOLICITUD_BY_ID_TURNO_HIST. */
	public static final String CS_SOLICITUD_BY_ID_TURNO_HIST = "SELECT ID_SOLICITUD FROM SDB_ACC_TURNO WHERE ID_TURNO = ( SELECT ID_TURNO FROM SDB_ACC_TURNO_HISTORIA TH WHERE TH.ID_TURNO_HISTORIA = ?)";

	/** Constante CS_OBSERVACIONES_PROCESO_ANTE. */
	public static final String CS_OBSERVACIONES_PROCESO_ANTE = "SELECT THANT.OBSERVACIONES OBSERVACIONES FROM SDB_ACC_TURNO_HISTORIA THANT WHERE ID_TURNO_HISTORIA = ( SELECT TH.ID_ANTERIOR FROM SDB_ACC_TURNO_HISTORIA TH WHERE TH.ID_TURNO_HISTORIA = ?)";

	/** Constante CS_INDICADORES_CAMPOS. */
	public static final String CS_INDICADORES_CAMPOS = "SELECT CAMPO FROM SDB_ACC_CORRECCION_DATOS_DOCUMENTO WHERE ID_TURNO_HISTORIA = (SELECT ID_ANTERIOR FROM SDB_ACC_TURNO_HISTORIA WHERE ID_TURNO_HISTORIA = ?)";

	/** Constante CS_MOTIVO_NO_TRAMITE. */
	public static final String CS_MOTIVO_NO_TRAMITE = "SELECT OBSERVACIONES_NO_TRAMITE FROM SDB_ACC_TURNO_HISTORIA WHERE ID_TURNO_HISTORIA = ?";

	/** Constante CS_CONSULTA_ENTREGA_TURNO_NIR. */
	public static final String CS_CONSULTA_ENTREGA_TURNO_NIR = "SELECT TH.ID_TURNO, T.FECHA_CREACION, TH.FECHA_CREACION AS FECHA_CREACION_ETAPA, TH.OBSERVACIONES, S.NIR, TH.FECHA_REPARTO FECHA_ASIGNACION, TH.ID_TURNO_HISTORIA, TH.ESTADO_ACTIVIDAD, TH.MOTIVO_NO_TRAMITE , FA.NOMBRE, P.NOMBRE AS NOMBRE_PROCESO FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON TH.ID_TURNO = T.ID_TURNO INNER JOIN SDB_ACC_PROCESO P ON TH.ID_PROCESO = P.ID_PROCESO RIGHT JOIN SDB_ACC_SOLICITUD S ON TH.ID_PROCESO = S.ID_PROCESO AND TH.ID_SOLICITUD = S.ID_SOLICITUD LEFT JOIN SDB_PGN_ETAPA F ON T.ID_ETAPA_ACTUAL = F.ID_ETAPA INNER JOIN SDB_PGN_FASES FA ON FA.ID_FASE = F.ID_FASE WHERE TH.ID_ETAPA = ? ";

	/** Constante CS_CONSULTA_RETOMAR_SOLICITUD. */
	public static final String CS_CONSULTA_RETOMAR_SOLICITUD = "SELECT S.ID_SOLICITUD ID_SOLICITUD, TO_DATE(TO_CHAR(S.FECHA_CREACION, 'YYYY/MM/DD HH:MI:SS'), 'YYYY/MM/DD HH:MI:SS') FECHA_CREACION, PR.NOMBRE NOMBRE_PROCESO, SPR.NOMBRE NOMBRE_SUBPROCESO, TIPOD.DESCRIPCION TIPO_DOCUMENTO, P.NUMERO_DOCUMENTO NUMERO_DOCUMENTO, S.COMENTARIO COMENTARIO FROM SDB_ACC_SOLICITUD S, SDB_ACC_PERSONA P, SDB_COL_INTERESADO_DOCUMENTO_TIPO TIPOD, SDB_ACC_PROCESO PR, SDB_ACC_SUBPROCESO SPR WHERE S.ID_PERSONA = P.ID_PERSONA AND P.ID_DOCUMENTO_TIPO = TIPOD.ID_DOCUMENTO_TIPO AND S.ID_PROCESO = PR.ID_PROCESO(+) AND S.ID_PROCESO = SPR.ID_PROCESO(+) AND S.ID_SUBPROCESO = SPR.ID_SUBPROCESO(+) AND S.NIR IS NULL ";

	/** Constante cs_CONSULTA_MATRICULAS_DEFINITIVAS. */
	public static final String cs_CONSULTA_MATRICULAS_DEFINITIVAS = "SELECT SM.ID_CIRCULO || '-' || SM.ID_MATRICULA MATRICULA, SM.ID_CIRCULO, PR.PREDIO_INCONSISTENTE, SM.ID_MATRICULA, UPPER (NVL(EP.NOMBRE,'ACTIVO')) ESTADO_PREDIO, MAX(PANJ.ID_NATURALEZA_JURIDICA) ID_NATURALEZA_JURIDICA, MAX(PANJ.VERSION) VERSION, NVL(MAX(AP.ID_ANOTACION),'0') ID_ANOTACION FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO=TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD=T.ID_SOLICITUD INNER JOIN SDB_ACC_SOLICITUD_MATRICULA SM  ON SM.ID_SOLICITUD = S.ID_SOLICITUD AND SM.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON PR.ID_CIRCULO = SM.ID_CIRCULO AND PR.ID_MATRICULA = SM.ID_MATRICULA LEFT JOIN SDB_PNG_ESTADO_PREDIO EP ON EP.ID_ESTADO_PREDIO = PR.ID_ESTADO_PREDIO LEFT JOIN SDB_BNG_ANOTACION_PREDIO AP ON AP.ID_CIRCULO = SM.ID_CIRCULO AND AP.ID_MATRICULA = SM.ID_MATRICULA LEFT OUTER JOIN SDB_PNG_NATURALEZA_JURIDICA PNJ ON PNJ.ID_NATURALEZA_JURIDICA = AP.ID_NATURALEZA_JURIDICA AND  PNJ.VERSION = AP.VERSION LEFT OUTER JOIN SDB_PGN_ALERTA_NATURALEZA_JURIDICA PANJ ON PANJ.ID_NATURALEZA_JURIDICA = PNJ.ID_NATURALEZA_JURIDICA AND PANJ.VERSION = PNJ.VERSION WHERE TH.ID_TURNO_HISTORIA = ? AND NVL(SM.ESTADO,'A') != 'I' GROUP BY SM.ID_CIRCULO, SM.ID_MATRICULA, PR.PREDIO_INCONSISTENTE, UPPER (NVL(EP.NOMBRE,'ACTIVO')) ORDER BY SM.ID_MATRICULA";

	/** Constante cs_CONSULTA_MATRICULAS_TRASLADO. */
	public static final String cs_CONSULTA_MATRICULAS_TRASLADO = "SELECT SM.ID_CIRCULO_ORIGEN || '-' || SM.ID_MATRICULA_ORIGEN MATRICULA, SM.ID_CIRCULO_ORIGEN, SM.ID_CIRCULO_ORIGEN ID_CIRCULO, SM.ID_MATRICULA_ORIGEN ID_MATRICULA, PR.PREDIO_INCONSISTENTE, SM.ID_MATRICULA_ORIGEN, UPPER (NVL(EP.NOMBRE,'ACTIVO')) ESTADO_PREDIO, MAX(PANJ.ID_NATURALEZA_JURIDICA) ID_NATURALEZA_JURIDICA, MAX(PANJ.VERSION) VERSION, NVL(MAX(AP.ID_ANOTACION),'0') ID_ANOTACION FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO=TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD=T.ID_SOLICITUD INNER JOIN SDB_ACC_TRASLADO_MATRICULA SM  ON SM.ID_SOLICITUD = S.ID_SOLICITUD AND SM.ID_CIRCULO_ORIGEN = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON PR.ID_CIRCULO = SM.ID_CIRCULO_ORIGEN AND PR.ID_MATRICULA = SM.ID_MATRICULA_ORIGEN LEFT JOIN SDB_PNG_ESTADO_PREDIO EP ON EP.ID_ESTADO_PREDIO = PR.ID_ESTADO_PREDIO LEFT JOIN SDB_BNG_ANOTACION_PREDIO AP ON AP.ID_CIRCULO = SM.ID_CIRCULO_ORIGEN AND AP.ID_MATRICULA = SM.ID_MATRICULA_ORIGEN LEFT OUTER JOIN SDB_PNG_NATURALEZA_JURIDICA PNJ ON PNJ.ID_NATURALEZA_JURIDICA = AP.ID_NATURALEZA_JURIDICA AND  PNJ.VERSION = AP.VERSION LEFT OUTER JOIN SDB_PGN_ALERTA_NATURALEZA_JURIDICA PANJ ON PANJ.ID_NATURALEZA_JURIDICA = PNJ.ID_NATURALEZA_JURIDICA AND PANJ.VERSION = PNJ.VERSION WHERE TH.ID_TURNO_HISTORIA = ? GROUP BY SM.ID_CIRCULO_ORIGEN, SM.ID_MATRICULA_ORIGEN, PR.PREDIO_INCONSISTENTE, UPPER (NVL(EP.NOMBRE,'ACTIVO')) ORDER BY SM.ID_MATRICULA_ORIGEN";

	/** Constante CS_CONSULTA_MATRICULAS_TEMPORALES. */
	public static final String CS_CONSULTA_MATRICULAS_TEMPORALES = "SELECT APR.ID_CIRCULO || '-' || APR.ID_MATRICULA MATRICULA, APR.ID_CIRCULO, APR.ID_MATRICULA, UPPER (NVL(EP.NOMBRE,'ACTIVO')) ESTADO_PREDIO, MAX(PANJ.ID_NATURALEZA_JURIDICA) ID_NATURALEZA_JURIDICA, MAX(PANJ.VERSION) VERSION, NVL(MAX(AP.ID_ANOTACION),'0') ID_ANOTACION, MAX(APR.ID_PREDIO_REGISTRO) ID_PREDIO_REGISTRO FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO=TH.ID_TURNO INNER JOIN SDB_ACC_PREDIO_REGISTRO APR ON APR.ID_TURNO = T.ID_TURNO LEFT JOIN SDB_PNG_ESTADO_PREDIO EP ON EP.ID_ESTADO_PREDIO = APR.ID_ESTADO_PREDIO LEFT JOIN SDB_ACC_ANOTACION_PREDIO AP ON AP.ID_CIRCULO = APR.ID_CIRCULO AND AP.ID_MATRICULA = APR.ID_MATRICULA LEFT OUTER JOIN SDB_PNG_NATURALEZA_JURIDICA PNJ ON PNJ.ID_NATURALEZA_JURIDICA = AP.ID_NATURALEZA_JURIDICA AND PNJ.VERSION = AP.VERSION LEFT OUTER JOIN SDB_PGN_ALERTA_NATURALEZA_JURIDICA PANJ ON PANJ.ID_NATURALEZA_JURIDICA = PNJ.ID_NATURALEZA_JURIDICA AND PANJ.VERSION = PNJ.VERSION WHERE TH.ID_TURNO_HISTORIA = ? AND APR.ID_MATRICULA_DEFINITIVA IS NULL GROUP BY APR.ID_CIRCULO,APR.ID_MATRICULA,UPPER (NVL(EP.NOMBRE,'ACTIVO')) ORDER BY APR.ID_MATRICULA ";

	/** Constante CS_CONSULTA_MATRICULAS_TEMPORALES_37. */
	public static final String CS_CONSULTA_MATRICULAS_TEMPORALES_37 = "SELECT ID_CIRCULO_GRABACION, ID_MATRICULA_GRABACION FROM SDB_ACC_DATOS_ANT_SISTEMA WHERE ID_SOLICITUD = ? AND ID_CIRCULO = ?";

	/** Constante CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO. */
	public static final String CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO = "SELECT BB.ID_TURNO_BLOQUEO,BQ.FECHA_CREACION,E.NOMBRE || '-' || BB.ESTADO ESTADO_TURNO,UPPER(TRIM(U.ID_USUARIO)) NOMBRE_USUARIO,SM.ID_CIRCULO || '-' || SM.ID_MATRICULA MATRICULA,SM.ID_CIRCULO,SM.ID_MATRICULA FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO=TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD=T.ID_SOLICITUD INNER JOIN SDB_ACC_SOLICITUD_MATRICULA SM ON SM.ID_SOLICITUD = S.ID_SOLICITUD AND SM.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON PR.ID_CIRCULO = SM.ID_CIRCULO AND PR.ID_MATRICULA = SM.ID_MATRICULA INNER JOIN (SELECT SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO,  SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, MAX(SDB_ACC_BITACORA_BLOQUEO.ID_BITACORA_BLOQUEO)  ID_BITACORA, SDB_ACC_BITACORA_BLOQUEO.ESTADO FROM SDB_ACC_BITACORA_BLOQUEO GROUP BY SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA,SDB_ACC_BITACORA_BLOQUEO.ESTADO ) BB ON BB.ID_CIRCULO = SM.ID_CIRCULO AND BB.ID_MATRICULA = SM.ID_MATRICULA AND BB.ESTADO = 'BLOQUEADO' AND BB.ID_TURNO_BLOQUEO <> T.ID_TURNO INNER JOIN SDB_ACC_BITACORA_BLOQUEO BQ ON BQ.ID_BITACORA_BLOQUEO = BB.ID_BITACORA LEFT OUTER JOIN SDB_ACC_TURNO_HISTORIA TH2 ON TH2.ID_TURNO_HISTORIA = (SELECT MAX(ID_TURNO_HISTORIA) FROM SDB_ACC_TURNO_HISTORIA TH3 WHERE TH3.ID_TURNO = BB.ID_TURNO_BLOQUEO) LEFT OUTER JOIN SDB_PGN_ETAPA E ON (E.ID_ETAPA=TH2.ID_ETAPA) INNER JOIN SDB_AUT_USUARIO U ON U.ID_USUARIO=TH2.ID_USUARIO WHERE TH.ID_TURNO_HISTORIA = ? AND NVL(SM.ESTADO,'A') != 'I' ORDER BY BQ.FECHA_CREACION ASC";

	/** Constante CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_MANTIS2651. */
	public static final String CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_MANTIS2651 = "SELECT BB.ID_TURNO_BLOQUEO,BQ.FECHA_CREACION,E.NOMBRE ESTADO_TURNO,UPPER(TRIM(U.ID_USUARIO)) NOMBRE_USUARIO,SM.ID_CIRCULO || '-' || SM.ID_MATRICULA MATRICULA,SM.ID_CIRCULO,SM.ID_MATRICULA FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO=TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD=T.ID_SOLICITUD INNER JOIN SDB_ACC_SOLICITUD_MATRICULA SM ON SM.ID_SOLICITUD = S.ID_SOLICITUD AND SM.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON PR.ID_CIRCULO = SM.ID_CIRCULO AND PR.ID_MATRICULA = SM.ID_MATRICULA INNER JOIN (SELECT SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO,  SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, MAX(SDB_ACC_BITACORA_BLOQUEO.ID_BITACORA_BLOQUEO)  ID_BITACORA, SDB_ACC_BITACORA_BLOQUEO.ESTADO FROM SDB_ACC_BITACORA_BLOQUEO GROUP BY SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA,SDB_ACC_BITACORA_BLOQUEO.ESTADO ) BB ON BB.ID_CIRCULO = SM.ID_CIRCULO AND BB.ID_MATRICULA = SM.ID_MATRICULA AND BB.ESTADO = 'BLOQUEADO' AND BB.ID_TURNO_BLOQUEO <> T.ID_TURNO INNER JOIN SDB_ACC_BITACORA_BLOQUEO BQ ON BQ.ID_BITACORA_BLOQUEO = BB.ID_BITACORA LEFT OUTER JOIN SDB_ACC_TURNO_HISTORIA TH2 ON TH2.ID_TURNO_HISTORIA = (SELECT MAX(ID_TURNO_HISTORIA) FROM SDB_ACC_TURNO_HISTORIA TH3 WHERE TH3.ID_TURNO = BB.ID_TURNO_BLOQUEO) LEFT OUTER JOIN SDB_PGN_ETAPA E ON (E.ID_ETAPA=TH2.ID_ETAPA) INNER JOIN SDB_AUT_USUARIO U ON U.ID_USUARIO=TH2.ID_USUARIO WHERE TH.ID_TURNO_HISTORIA = ? AND NVL(SM.ESTADO,'A') != 'I' ORDER BY BQ.FECHA_CREACION ASC";

	/** Constante CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_CORRECCIONES. */
	public static final String CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_CORRECCIONES = "SELECT BB.ID_TURNO_BLOQUEO, BQ.FECHA_CREACION, E.NOMBRE || '-' || BB.ESTADO ESTADO_TURNO, UPPER(TRIM(U.ID_USUARIO) ) NOMBRE_USUARIO, SC.ID_CIRCULO || '-' || SC.ID_MATRICULA MATRICULA, SC.ID_CIRCULO, SC.ID_MATRICULA FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO = TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD = T.ID_SOLICITUD INNER JOIN (SELECT DISTINCT SDB_ACC_SOLICITUD_CORRECCION.ID_MATRICULA, SDB_ACC_SOLICITUD_CORRECCION.ID_CIRCULO, SDB_ACC_SOLICITUD_CORRECCION.ID_SOLICITUD FROM SDB_ACC_SOLICITUD_CORRECCION) SC ON SC.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON SC.ID_SOLICITUD = S.ID_SOLICITUD AND PR.ID_CIRCULO = SC.ID_CIRCULO AND PR.ID_MATRICULA = SC.ID_MATRICULA INNER JOIN (SELECT SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, MAX(SDB_ACC_BITACORA_BLOQUEO.ID_BITACORA_BLOQUEO) ID_BITACORA, SDB_ACC_BITACORA_BLOQUEO.ESTADO FROM SDB_ACC_BITACORA_BLOQUEO WHERE SDB_ACC_BITACORA_BLOQUEO.ESTADO = 'ACTIVO' GROUP BY SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, SDB_ACC_BITACORA_BLOQUEO.ESTADO) BB ON BB.ID_CIRCULO = SC.ID_CIRCULO AND BB.ID_MATRICULA = SC.ID_MATRICULA AND BB.ID_TURNO_BLOQUEO <> T.ID_TURNO INNER JOIN SDB_ACC_BITACORA_BLOQUEO BQ ON BQ.ID_BITACORA_BLOQUEO = BB.ID_BITACORA LEFT OUTER JOIN SDB_ACC_TURNO_HISTORIA TH2 ON TH2.ID_TURNO_HISTORIA = (SELECT MAX(ID_TURNO_HISTORIA) FROM SDB_ACC_TURNO_HISTORIA TH3 WHERE TH3.ID_TURNO = BB.ID_TURNO_BLOQUEO) LEFT OUTER JOIN SDB_PGN_ETAPA E ON ( E.ID_ETAPA = TH2.ID_ETAPA ) INNER JOIN SDB_AUT_USUARIO U ON U.ID_USUARIO = TH2.ID_USUARIO WHERE TH.ID_TURNO_HISTORIA = ? ORDER BY BQ.FECHA_CREACION ASC";

	/** Constante CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_CORRECCIONES_MANTIS2651. */
	public static final String CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_CORRECCIONES_MANTIS2651 = "SELECT BB.ID_TURNO_BLOQUEO, BQ.FECHA_CREACION,E.NOMBRE ESTADO_TURNO, UPPER(TRIM(U.ID_USUARIO) ) NOMBRE_USUARIO, SC.ID_CIRCULO || '-' || SC.ID_MATRICULA MATRICULA, SC.ID_CIRCULO, SC.ID_MATRICULA FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO = TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD = T.ID_SOLICITUD INNER JOIN (SELECT DISTINCT SDB_ACC_SOLICITUD_CORRECCION.ID_MATRICULA, SDB_ACC_SOLICITUD_CORRECCION.ID_CIRCULO, SDB_ACC_SOLICITUD_CORRECCION.ID_SOLICITUD FROM SDB_ACC_SOLICITUD_CORRECCION) SC ON SC.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON SC.ID_SOLICITUD = S.ID_SOLICITUD AND PR.ID_CIRCULO = SC.ID_CIRCULO AND PR.ID_MATRICULA = SC.ID_MATRICULA INNER JOIN (SELECT SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, MAX(SDB_ACC_BITACORA_BLOQUEO.ID_BITACORA_BLOQUEO) ID_BITACORA, SDB_ACC_BITACORA_BLOQUEO.ESTADO FROM SDB_ACC_BITACORA_BLOQUEO WHERE SDB_ACC_BITACORA_BLOQUEO.ESTADO = 'ACTIVO' GROUP BY SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, SDB_ACC_BITACORA_BLOQUEO.ESTADO) BB ON BB.ID_CIRCULO = SC.ID_CIRCULO AND BB.ID_MATRICULA = SC.ID_MATRICULA AND BB.ID_TURNO_BLOQUEO <> T.ID_TURNO INNER JOIN SDB_ACC_BITACORA_BLOQUEO BQ ON BQ.ID_BITACORA_BLOQUEO = BB.ID_BITACORA LEFT OUTER JOIN SDB_ACC_TURNO_HISTORIA TH2 ON TH2.ID_TURNO_HISTORIA = (SELECT MAX(ID_TURNO_HISTORIA) FROM SDB_ACC_TURNO_HISTORIA TH3 WHERE TH3.ID_TURNO = BB.ID_TURNO_BLOQUEO) LEFT OUTER JOIN SDB_PGN_ETAPA E ON ( E.ID_ETAPA = TH2.ID_ETAPA ) INNER JOIN SDB_AUT_USUARIO U ON U.ID_USUARIO = TH2.ID_USUARIO WHERE TH.ID_TURNO_HISTORIA = ? ORDER BY BQ.FECHA_CREACION ASC";

	/** Constante CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_GRABACION. */
	public static final String CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_GRABACION = "SELECT BB.ID_TURNO_BLOQUEO, BQ.FECHA_CREACION, E.NOMBRE || '-' || BB.ESTADO ESTADO_TURNO, UPPER(TRIM(U.ID_USUARIO) ) NOMBRE_USUARIO, SC.ID_CIRCULO || '-' || SC.ID_MATRICULA MATRICULA, SC.ID_CIRCULO, SC.ID_MATRICULA FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO = TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD = T.ID_SOLICITUD INNER JOIN (SELECT DISTINCT SDB_ACC_DATOS_ANT_SISTEMA.ID_MATRICULA_GRABACION ID_MATRICULA, SDB_ACC_DATOS_ANT_SISTEMA.ID_CIRCULO_GRABACION ID_CIRCULO, SDB_ACC_DATOS_ANT_SISTEMA.ID_SOLICITUD FROM SDB_ACC_DATOS_ANT_SISTEMA) SC ON SC.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON SC.ID_SOLICITUD = S.ID_SOLICITUD AND PR.ID_CIRCULO = SC.ID_CIRCULO AND PR.ID_MATRICULA = SC.ID_MATRICULA INNER JOIN (SELECT SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, MAX(SDB_ACC_BITACORA_BLOQUEO.ID_BITACORA_BLOQUEO) ID_BITACORA, SDB_ACC_BITACORA_BLOQUEO.ESTADO FROM SDB_ACC_BITACORA_BLOQUEO GROUP BY SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, SDB_ACC_BITACORA_BLOQUEO.ESTADO) BB ON BB.ID_CIRCULO = SC.ID_CIRCULO AND BB.ID_MATRICULA = SC.ID_MATRICULA INNER JOIN SDB_ACC_BITACORA_BLOQUEO BQ ON BQ.ID_BITACORA_BLOQUEO = BB.ID_BITACORA LEFT OUTER JOIN SDB_ACC_TURNO_HISTORIA TH2 ON TH2.ID_TURNO_HISTORIA = (SELECT MAX(ID_TURNO_HISTORIA) FROM SDB_ACC_TURNO_HISTORIA TH3 WHERE TH3.ID_TURNO = BB.ID_TURNO_BLOQUEO) LEFT OUTER JOIN SDB_PGN_ETAPA E ON ( E.ID_ETAPA = TH2.ID_ETAPA ) INNER JOIN SDB_AUT_USUARIO U ON U.ID_USUARIO = TH2.ID_USUARIO WHERE TH.ID_TURNO_HISTORIA = ? ORDER BY BQ.FECHA_CREACION ASC";

	/** Constante CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_GRABACION_MANTIS2651. */
	public static final String CS_CONSULTA_TURNOS_CON_TRAMITES_EN_CURSO_GRABACION_MANTIS2651 = "SELECT BB.ID_TURNO_BLOQUEO, BQ.FECHA_CREACION,E.NOMBRE ESTADO_TURNO, UPPER(TRIM(U.ID_USUARIO) ) NOMBRE_USUARIO, SC.ID_CIRCULO || '-' || SC.ID_MATRICULA MATRICULA, SC.ID_CIRCULO, SC.ID_MATRICULA FROM SDB_ACC_TURNO_HISTORIA TH INNER JOIN SDB_ACC_TURNO T ON T.ID_TURNO = TH.ID_TURNO INNER JOIN SDB_ACC_SOLICITUD S ON S.ID_SOLICITUD = T.ID_SOLICITUD INNER JOIN (SELECT DISTINCT SDB_ACC_DATOS_ANT_SISTEMA.ID_MATRICULA_GRABACION ID_MATRICULA, SDB_ACC_DATOS_ANT_SISTEMA.ID_CIRCULO_GRABACION ID_CIRCULO, SDB_ACC_DATOS_ANT_SISTEMA.ID_SOLICITUD FROM SDB_ACC_DATOS_ANT_SISTEMA) SC ON SC.ID_CIRCULO = T.ID_CIRCULO INNER JOIN SDB_BNG_PREDIO_REGISTRO PR ON SC.ID_SOLICITUD = S.ID_SOLICITUD AND PR.ID_CIRCULO = SC.ID_CIRCULO AND PR.ID_MATRICULA = SC.ID_MATRICULA INNER JOIN (SELECT SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, MAX(SDB_ACC_BITACORA_BLOQUEO.ID_BITACORA_BLOQUEO) ID_BITACORA, SDB_ACC_BITACORA_BLOQUEO.ESTADO FROM SDB_ACC_BITACORA_BLOQUEO GROUP BY SDB_ACC_BITACORA_BLOQUEO.ID_TURNO_BLOQUEO, SDB_ACC_BITACORA_BLOQUEO.ID_CIRCULO, SDB_ACC_BITACORA_BLOQUEO.ID_MATRICULA, SDB_ACC_BITACORA_BLOQUEO.ESTADO) BB ON BB.ID_CIRCULO = SC.ID_CIRCULO AND BB.ID_MATRICULA = SC.ID_MATRICULA INNER JOIN SDB_ACC_BITACORA_BLOQUEO BQ ON BQ.ID_BITACORA_BLOQUEO = BB.ID_BITACORA LEFT OUTER JOIN SDB_ACC_TURNO_HISTORIA TH2 ON TH2.ID_TURNO_HISTORIA = (SELECT MAX(ID_TURNO_HISTORIA) FROM SDB_ACC_TURNO_HISTORIA TH3 WHERE TH3.ID_TURNO = BB.ID_TURNO_BLOQUEO) LEFT OUTER JOIN SDB_PGN_ETAPA E ON ( E.ID_ETAPA = TH2.ID_ETAPA ) INNER JOIN SDB_AUT_USUARIO U ON U.ID_USUARIO = TH2.ID_USUARIO WHERE TH.ID_TURNO_HISTORIA = ? ORDER BY BQ.FECHA_CREACION ASC";

	/** Constante CS_CONSULTA_DATA_TURNO_VINCULADO. */
	public static final String CS_CONSULTA_DATA_TURNO_VINCULADO = "SELECT SDB_ACC_TURNO_DERIVADO.ID_TURNO_PADRE,SDB_ACC_TURNO_DERIVADO.ID_TURNO_HIJO,SDB_ACC_TURNO_DERIVADO.INDICADOR_VINCULADO,PKG_REGISTRO.FUNC_DESCRIPCION_VINCULADO(ID_TURNO_PADRE) DESCRIPCION FROM SDB_ACC_TURNO_DERIVADO WHERE INDICADOR_VINCULADO = 'S' AND SDB_ACC_TURNO_DERIVADO.ID_TURNO_PADRE = ?";

	/** Constante CS_CONSULTA_DATA_EMAIL_PERSONA. */
	public static final String CS_CONSULTA_DATA_EMAIL_PERSONA = "SELECT ID_CORREO_ELECTRONICO FROM SDB_ACC_PERSONA_CORREO_ELECTRONICO WHERE ID_PERSONA = ? AND CORREO_ELECTRONICO = ?";

	/** Constante CS_CONSULTA_DATA_CELULAR_PERSONA. */
	public static final String CS_CONSULTA_DATA_CELULAR_PERSONA = "SELECT ID_TELEFONO FROM SDB_ACC_PERSONA_TELEFONO WHERE ID_PERSONA = ? AND TIPO_TELEFONO = 'M' AND TELEFONO = ?";

	/** Constante CS_TURNOS_EN_ESPERA. */
	public static final String CS_TURNOS_EN_ESPERA = "SELECT ET.ID_ETAPA ||' - '|| ET.NOMBRE ETAPA, PF.NOMBRE, TH.FECHA_INICIAL,TH.FECHA_VENCIMIENTO,S2.ID_PROCESO,TH.OBSERVACIONES OBSERVACIONES "
		+ "FROM SDB_ACC_TURNO_HISTORIA TH " + "INNER JOIN SDB_PGN_ETAPA ET ON ET.ID_ETAPA = TH.ID_ETAPA "
		+ "INNER JOIN SDB_PGN_FASES PF ON PF.ID_FASE = ET.ID_FASE "
		+ "INNER JOIN SDB_ACC_SOLICITUD SO ON SO.ID_SOLICITUD = TH.ID_SOLICITUD "
		+ "LEFT JOIN SDB_ACC_SOLICITUD_ASOCIADA SA ON SA.ID_SOLICITUD = SO.ID_SOLICITUD "
		+ "LEFT JOIN SDB_ACC_SOLICITUD S2 ON SA.ID_SOLICITUD1 = S2.ID_SOLICITUD " + "WHERE TH.ID_TURNO_HISTORIA = ?";

	/** Constante CS_TURNOS_EN_ESPERA_AUT. */
	public static final String CS_TURNOS_EN_ESPERA_AUT = "SELECT ET.ID_ETAPA ||' - '|| ET.NOMBRE ETAPA, PF.NOMBRE, TH.FECHA_INICIAL,TH.FECHA_VENCIMIENTO,S2.ID_PROCESO,TH.MOTIVO_NO_TRAMITE OBSERVACIONES "
		+ "FROM SDB_ACC_TURNO_HISTORIA TH " + "INNER JOIN SDB_PGN_ETAPA ET ON ET.ID_ETAPA = TH.ID_ETAPA "
		+ "INNER JOIN SDB_PGN_FASES PF ON PF.ID_FASE = ET.ID_FASE "
		+ "INNER JOIN SDB_ACC_SOLICITUD SO ON SO.ID_SOLICITUD = TH.ID_SOLICITUD "
		+ "LEFT JOIN SDB_ACC_SOLICITUD_ASOCIADA SA ON SA.ID_SOLICITUD = SO.ID_SOLICITUD "
		+ "LEFT JOIN SDB_ACC_SOLICITUD S2 ON SA.ID_SOLICITUD1 = S2.ID_SOLICITUD " + "WHERE TH.ID_TURNO_HISTORIA = ?";

	/** Constante CS_TURNOS_EN_ESPERA_PRORROGA. */
	public static final String CS_TURNOS_EN_ESPERA_PRORROGA = "SELECT ET.ID_ETAPA ||' - '|| ET.NOMBRE ETAPA, PF.NOMBRE, TH.FECHA_INICIAL FECHA_PRORROGA,TH.FECHA_VENCIMIENTO FECHA_PRORROGA_FINAL,S2.ID_PROCESO,TH.MOTIVO_NO_TRAMITE OBSERVACIONES "
		+ "FROM SDB_ACC_TURNO_HISTORIA TH " + "INNER JOIN SDB_PGN_ETAPA ET ON ET.ID_ETAPA = TH.ID_ETAPA "
		+ "INNER JOIN SDB_PGN_FASES PF ON PF.ID_FASE = ET.ID_FASE "
		+ "INNER JOIN SDB_ACC_SOLICITUD SO ON SO.ID_SOLICITUD = TH.ID_SOLICITUD "
		+ "LEFT JOIN SDB_ACC_SOLICITUD_ASOCIADA SA ON SA.ID_SOLICITUD = SO.ID_SOLICITUD "
		+ "LEFT JOIN SDB_ACC_SOLICITUD S2 ON SA.ID_SOLICITUD1 = S2.ID_SOLICITUD "
		+ "WHERE TH.ID_TURNO_HISTORIA = ? AND TH.ESTADO_ACTIVIDAD != 'TER'";

	/** Constante CS_ACTOS_ESPERA_PRORROGA. */
	public static final String CS_ACTOS_ESPERA_PRORROGA = "SELECT PA.ID_TIPO_ACTO || ' - ' || PA.NOMBRE TIPO_ACTO, AP.FECHA_CREACION, AP.FECHA_VENCIMIENTO FROM SDB_ACC_TURNO_HISTORIA TH  "
		+ "INNER JOIN SDB_ACC_REGISTRO_ANOTACION_PROHIBICION  AP ON TH.ID_TURNO = AP.ID_TURNO "
		+ "INNER JOIN SDB_ACC_ACTO AA ON TH.ID_SOLICITUD = AA.ID_SOLICITUD "
		+ "INNER JOIN SDB_PGN_TIPO_ACTO PA ON AA.ID_TIPO_ACTO = PA.ID_TIPO_ACTO " + "WHERE TH.ID_TURNO_HISTORIA = ?";
}
